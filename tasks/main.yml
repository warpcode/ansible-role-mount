---
- name: Create cifs credentials path
  become: yes
  file:
    path: "{{ mount_cifs_cred_path }}"
    state: directory

- name: Create cifs credentials files
  become: yes
  template:
    src: cifs_credentials.j2
    dest: "{{ mount_cifs_cred_path }}/{{ item.name }}.cred"
    mode: 0755
    owner: root
    group: root
  with_items: "{{ mount_cifs_credentials }}"

- name: Install cifs utils
  package:
    name: cifs-utils

- name: Setup systemd Service for mountpoints
  become: yes
  template:
    src: systemd_mount.j2
    dest: "/etc/systemd/system/{{ item.mount| regex_replace('^\\/|\\/$', '') | replace('/', '-') }}.mount"
    mode: 0755
    owner: root
    group: root
  with_items: "{{ mount_automounts }}"

- name: Setup systemd Service for automount
  become: yes
  template:
    src: systemd_automount.j2
    dest: "/etc/systemd/system/{{ item.mount| regex_replace('^\\/|\\/$', '') | replace('/', '-') }}.automount"
    mode: 0755
    owner: root
    group: root
  with_items: "{{ mount_automounts }}"

- name: reload systemd
  command: systemctl daemon-reload

- name: Ensure automount service is started
  become: yes
  systemd:
    name: "{{ item.mount| regex_replace('^\\/|\\/$', '') | replace('/', '-') }}.automount"
    state: started
    enabled: True
  with_items: "{{ mount_automounts }}"

- name: Ensure mount service is disabled
  become: yes
  systemd:
    name: "{{ item.mount| regex_replace('^\\/|\\/$', '') | replace('/', '-') }}.mount"
    enabled: False
  with_items: "{{ mount_automounts }}"

- name: Ensure mount dirs exist for fstab
  become: yes
  file:
    path: "{{ item.mount }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
  with_items: "{{ mount_fstab }}"

- name: Create fstab entries for devices
  become: yes
  mount:
    name: "{{ item.mount }}"
    src: "{{ item.device }}"
    fstype: "{{ item.fstype }}"
    passno: "{{ item.passno | default(omit) }}"
    dump: "{{ item.dump | default(omit) }}"
    opts: "{{ item.opts | default('') }}"
    state: "{{ item.state | default('present') }}"
  when: item.device_is_dir is not defined or item.device_is_dir == False
  with_items: "{{ mount_fstab }}"

- name: Ensure device directories exist
  become: yes
  file:
    path: "{{ item.device }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
  when: item.device_is_dir | default(False)
  with_items: "{{ mount_fstab }}"

- name: Create fstab entries for devices as directories
  become: yes
  mount:
    name: "{{ item.mount }}"
    src: "{{ item.device }}"
    fstype: "{{ item.fstype }}"
    passno: "{{ item.passno | default(omit) }}"
    dump: "{{ item.dump | default(omit) }}"
    opts: "{{ item.opts | default('') }}"
    state: "{{ item.state | default('present') }}"
  when: item.device_is_dir | default(False)
  with_items: "{{ mount_fstab }}"
